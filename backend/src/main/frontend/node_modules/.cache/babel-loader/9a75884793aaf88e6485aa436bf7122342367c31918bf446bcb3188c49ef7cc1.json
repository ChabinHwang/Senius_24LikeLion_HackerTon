{"ast":null,"code":"// GlobalState.js\nimport React,{createContext,useReducer,useContext}from'react';// 초기 상태\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={id:null// userId를 id로 변경\n};// 리듀서 함수\nconst reducer=(state,action)=>{switch(action.type){case'SET_ID':// 'SET_USER_ID'를 'SET_ID'로 변경\nreturn{...state,id:action.payload};// userId를 id로 변경\ndefault:return state;}};// Context 생성\nconst GlobalStateContext=/*#__PURE__*/createContext();// Provider 컴포넌트\nexport const GlobalStateProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(reducer,initialState);return/*#__PURE__*/_jsx(GlobalStateContext.Provider,{value:{state,dispatch},children:children});};// Custom hook to use the global state\nexport const useGlobalState=()=>{const context=useContext(GlobalStateContext);if(context===undefined){throw new Error('useGlobalState must be used within a GlobalStateProvider');}return context;};","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsx","_jsx","initialState","id","reducer","state","action","type","payload","GlobalStateContext","GlobalStateProvider","_ref","children","dispatch","Provider","value","useGlobalState","context","undefined","Error"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/backend/src/main/frontend/src/GlobalState.js"],"sourcesContent":["// GlobalState.js\nimport React, { createContext, useReducer, useContext } from 'react';\n\n// 초기 상태\nconst initialState = {\n    id: null, // userId를 id로 변경\n};\n\n// 리듀서 함수\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case 'SET_ID': // 'SET_USER_ID'를 'SET_ID'로 변경\n            return { ...state, id: action.payload }; // userId를 id로 변경\n        default:\n            return state;\n    }\n};\n\n// Context 생성\nconst GlobalStateContext = createContext();\n\n// Provider 컴포넌트\nexport const GlobalStateProvider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <GlobalStateContext.Provider value={{ state, dispatch }}>\n            {children}\n        </GlobalStateContext.Provider>\n    );\n};\n\n// Custom hook to use the global state\nexport const useGlobalState = () => {\n    const context = useContext(GlobalStateContext);\n    if (context === undefined) {\n        throw new Error('useGlobalState must be used within a GlobalStateProvider');\n    }\n    return context;\n};\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,KAAQ,OAAO,CAEpE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,CAAG,CACjBC,EAAE,CAAE,IAAM;AACd,CAAC,CAED;AACA,KAAM,CAAAC,OAAO,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CAC/B,OAAQA,MAAM,CAACC,IAAI,EACf,IAAK,QAAQ,CAAE;AACX,MAAO,CAAE,GAAGF,KAAK,CAAEF,EAAE,CAAEG,MAAM,CAACE,OAAQ,CAAC,CAAE;AAC7C,QACI,MAAO,CAAAH,KAAK,CACpB,CACJ,CAAC,CAED;AACA,KAAM,CAAAI,kBAAkB,cAAGZ,aAAa,CAAC,CAAC,CAE1C;AACA,MAAO,MAAM,CAAAa,mBAAmB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5C,KAAM,CAACN,KAAK,CAAEQ,QAAQ,CAAC,CAAGf,UAAU,CAACM,OAAO,CAAEF,YAAY,CAAC,CAE3D,mBACID,IAAA,CAACQ,kBAAkB,CAACK,QAAQ,EAACC,KAAK,CAAE,CAAEV,KAAK,CAAEQ,QAAS,CAAE,CAAAD,QAAA,CACnDA,QAAQ,CACgB,CAAC,CAEtC,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,cAAc,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,OAAO,CAAGlB,UAAU,CAACU,kBAAkB,CAAC,CAC9C,GAAIQ,OAAO,GAAKC,SAAS,CAAE,CACvB,KAAM,IAAI,CAAAC,KAAK,CAAC,0DAA0D,CAAC,CAC/E,CACA,MAAO,CAAAF,OAAO,CAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}