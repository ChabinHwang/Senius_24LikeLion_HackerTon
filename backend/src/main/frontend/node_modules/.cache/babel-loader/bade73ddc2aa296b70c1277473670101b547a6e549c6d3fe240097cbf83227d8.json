{"ast":null,"code":"var _jsxFileName = \"/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as IconKakao } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 훅을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSlider({\n  slides = []\n}) {\n  _s();\n  const {\n    dispatch\n  } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n  const navigate = useNavigate();\n  const handleKakaoLoginClick = () => {\n    const clientId = '4fd07ea2b22cd1efe588cb88ceb5763c';\n    const redirectUri = 'http://localhost:8080/login/oauth2/code/kakao';\n    const authUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n\n    // 팝업 창 열기\n    const width = 500;\n    const height = 600;\n    const left = (window.innerWidth - width) / 2;\n    const top = (window.innerHeight - height) / 2;\n    const popup = window.open(authUrl, 'kakaoLogin', `width=${width},height=${height},top=${top},left=${left}`);\n\n    // 메시지 이벤트 리스너 추가\n    window.addEventListener('message', event => {\n      if (event.origin !== window.location.origin) {\n        return;\n      }\n      const {\n        data\n      } = event;\n      if (data && data.type === 'KAKAO_LOGIN' && data.payload) {\n        // 응답 데이터를 상태로 저장하거나 원하는 로직 추가\n        dispatch({\n          type: 'SET_USER',\n          payload: data.payload\n        });\n        // 로그인 성공 후 특정 페이지로 리다이렉트\n        navigate('/myinfo');\n        popup.close();\n      }\n    }, {\n      once: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kakao-login-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kakao-login-content\",\n        children: [/*#__PURE__*/_jsxDEV(IconKakao, {\n          className: \"kakao-login-icon\",\n          alt: \"Kakao Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kakao-login-text\",\n          onClick: handleKakaoLoginClick,\n          children: \"\\uCE74\\uCE74\\uC624\\uD1A1 \\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginSlider, \"kPeg7QRnqNOudJTphdvHi328PYI=\", false, function () {\n  return [useGlobalState, useNavigate];\n});\n_c = LoginSlider;\nexport default LoginSlider;\nvar _c;\n$RefreshReg$(_c, \"LoginSlider\");","map":{"version":3,"names":["React","useEffect","axios","ReactComponent","IconKakao","useGlobalState","useNavigate","jsxDEV","_jsxDEV","LoginSlider","slides","_s","dispatch","navigate","handleKakaoLoginClick","clientId","redirectUri","authUrl","width","height","left","window","innerWidth","top","innerHeight","popup","open","addEventListener","event","origin","location","data","type","payload","close","once","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as IconKakao } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\nimport { useNavigate } from \"react-router-dom\"; // useNavigate 훅을 가져옵니다.\n\nfunction LoginSlider({ slides = [] }) {\n    const { dispatch } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n    const navigate = useNavigate();\n\n    const handleKakaoLoginClick = () => {\n        const clientId = '4fd07ea2b22cd1efe588cb88ceb5763c';\n        const redirectUri = 'http://localhost:8080/login/oauth2/code/kakao';\n        const authUrl = `https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}`;\n\n        // 팝업 창 열기\n        const width = 500;\n        const height = 600;\n        const left = (window.innerWidth - width) / 2;\n        const top = (window.innerHeight - height) / 2;\n        const popup = window.open(authUrl, 'kakaoLogin', `width=${width},height=${height},top=${top},left=${left}`);\n\n        // 메시지 이벤트 리스너 추가\n        window.addEventListener('message', (event) => {\n            if (event.origin !== window.location.origin) {\n                return;\n            }\n            const { data } = event;\n            if (data && data.type === 'KAKAO_LOGIN' && data.payload) {\n                // 응답 데이터를 상태로 저장하거나 원하는 로직 추가\n                dispatch({ type: 'SET_USER', payload: data.payload });\n                // 로그인 성공 후 특정 페이지로 리다이렉트\n                navigate('/myinfo');\n                popup.close();\n            }\n        }, { once: true });\n    };\n\n    return (\n        <div className=\"screen\">\n            <div className=\"kakao-login-button\">\n                <div className=\"kakao-login-content\">\n                    <IconKakao className=\"kakao-login-icon\" alt=\"Kakao Icon\" />\n                    <div className=\"kakao-login-text\" onClick={handleKakaoLoginClick}>\n                        카카오톡 로그인하기\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginSlider;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}