{"ast":null,"code":"var _jsxFileName = \"/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as Image12 } from \"./assets/image 12.svg\";\nimport { ReactComponent as IconKakako } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSlider({\n  slides = []\n}) {\n  _s();\n  const {\n    dispatch\n  } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n  /*\n  const handleKakaoLoginClick = () => {\n      axios.get('http://localhost:8080/login',{ withCredentials: true }) // 원하는 API 엔드포인트를 입력하세요.\n          .then(response => {\n              console.log('GET 요청 성공:', response.data);\n              dispatch({ type: 'SET_ID', payload: response.data.id }); // 'SET_USER_ID'를 'SET_ID'로 변경\n          })\n          .catch(error => {\n              console.error('GET 요청 실패:', error);\n          });\n  };\n  */\n\n  // const handleKakaoLoginClick = () => {\n  //     window.location.href = 'https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=4fd07ea2b22cd1efe588cb88ceb5763c&redirect_uri=http://localhost:8080/login/oauth2/code/kakao';\n  // };\n  const handleKakaoLoginClick = async () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kakao-login-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kakao-login-content\",\n        children: [/*#__PURE__*/_jsxDEV(IconKakako, {\n          className: \"kakao-login-icon\",\n          alt: \"Kakao Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kakao-login-text\",\n          onClick: handleKakaoLoginClick,\n          children: \"\\uCE74\\uCE74\\uC624\\uD1A1 \\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginSlider, \"L6Qfcr2ESu1TD1K177TYl3bX3u8=\", false, function () {\n  return [useGlobalState];\n});\n_c = LoginSlider;\nexport default LoginSlider;\nvar _c;\n$RefreshReg$(_c, \"LoginSlider\");","map":{"version":3,"names":["React","useEffect","axios","ReactComponent","Image12","IconKakako","useGlobalState","jsxDEV","_jsxDEV","LoginSlider","slides","_s","dispatch","handleKakaoLoginClick","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as Image12 } from \"./assets/image 12.svg\";\nimport { ReactComponent as IconKakako } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\n\nfunction LoginSlider({ slides = [] }) {\n    const { dispatch } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n    /*\n    const handleKakaoLoginClick = () => {\n        axios.get('http://localhost:8080/login',{ withCredentials: true }) // 원하는 API 엔드포인트를 입력하세요.\n            .then(response => {\n                console.log('GET 요청 성공:', response.data);\n                dispatch({ type: 'SET_ID', payload: response.data.id }); // 'SET_USER_ID'를 'SET_ID'로 변경\n            })\n            .catch(error => {\n                console.error('GET 요청 실패:', error);\n            });\n    };\n    */\n\n    // const handleKakaoLoginClick = () => {\n    //     window.location.href = 'https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=4fd07ea2b22cd1efe588cb88ceb5763c&redirect_uri=http://localhost:8080/login/oauth2/code/kakao';\n    // };\n    const handleKakaoLoginClick = async () => {\n\n    };\n    return (\n        <div className=\"screen\">\n            <div className=\"kakao-login-button\">\n                <div className=\"kakao-login-content\">\n                    <IconKakako className=\"kakao-login-icon\" alt=\"Kakao Icon\" />\n                    <div className=\"kakao-login-text\" onClick={handleKakaoLoginClick}>\n                        카카오톡 로그인하기\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,SAASC,cAAc,IAAIC,OAAO,QAAQ,uBAAuB;AACjE,SAASD,cAAc,IAAIE,UAAU,QAAQ,qBAAqB;AAClE,SAASC,cAAc,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAC;EAAEC,MAAM,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGN,cAAc,CAAC,CAAC,CAAC,CAAC;EACvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;EACA;EACA;EACA,MAAMO,qBAAqB,GAAG,MAAAA,CAAA,KAAY,CAE1C,CAAC;EACD,oBACIL,OAAA;IAAKM,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnBP,OAAA;MAAKM,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/BP,OAAA;QAAKM,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChCP,OAAA,CAACH,UAAU;UAACS,SAAS,EAAC,kBAAkB;UAACE,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DZ,OAAA;UAAKM,SAAS,EAAC,kBAAkB;UAACO,OAAO,EAAER,qBAAsB;UAAAE,QAAA,EAAC;QAElE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACT,EAAA,CAjCQF,WAAW;EAAA,QACKH,cAAc;AAAA;AAAAgB,EAAA,GAD9Bb,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}