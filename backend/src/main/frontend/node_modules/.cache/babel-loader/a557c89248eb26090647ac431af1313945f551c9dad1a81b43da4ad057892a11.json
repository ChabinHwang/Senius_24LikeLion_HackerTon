{"ast":null,"code":"var _jsxFileName = \"/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as Image12 } from \"./assets/image 12.svg\";\nimport { ReactComponent as IconKakako } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginSlider({\n  slides = []\n}) {\n  _s();\n  const {\n    dispatch\n  } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n  /*\n  const handleKakaoLoginClick = () => {\n      axios.get('http://localhost:8080/login',{ withCredentials: true }) // 원하는 API 엔드포인트를 입력하세요.\n          .then(response => {\n              console.log('GET 요청 성공:', response.data);\n              dispatch({ type: 'SET_ID', payload: response.data.id }); // 'SET_USER_ID'를 'SET_ID'로 변경\n          })\n          .catch(error => {\n              console.error('GET 요청 실패:', error);\n          });\n  };\n  */\n\n  // const handleKakaoLoginClick = () => {\n  //     window.location.href = 'https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=4fd07ea2b22cd1efe588cb88ceb5763c&redirect_uri=http://localhost:8080/login/oauth2/code/kakao';\n  // };\n\n  useEffect(() => {\n    // 현재 URL에서 쿼리 매개변수를 추출합니다.\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    const state = urlParams.get('state');\n\n    // 인가 코드가 있는 경우 백엔드로 요청을 보냅니다.\n    if (code) {\n      axios.get(`http://localhost:8080/login/oauth2/code/kakao?code=${code}&state=${state}`, {\n        withCredentials: true\n      }).then(response => {\n        console.log('GET 요청 성공:', response.data);\n        // 전역 상태에 사용자 ID를 저장합니다.\n        dispatch({\n          type: 'SET_ID',\n          payload: response.data.id\n        });\n      }).catch(error => {\n        console.error('GET 요청 실패:', error);\n      });\n    }\n  }, [dispatch]);\n  const handleKakaoLoginClick = () => {\n    window.location.href = 'http://localhost:8080/login';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kakao-login-button\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kakao-login-content\",\n        children: [/*#__PURE__*/_jsxDEV(IconKakako, {\n          className: \"kakao-login-icon\",\n          alt: \"Kakao Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kakao-login-text\",\n          onClick: handleKakaoLoginClick,\n          children: \"\\uCE74\\uCE74\\uC624\\uD1A1 \\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginSlider, \"7Tk2C0anNZ5wFqzPk7x/LNzgPoM=\", false, function () {\n  return [useGlobalState];\n});\n_c = LoginSlider;\nexport default LoginSlider;\nvar _c;\n$RefreshReg$(_c, \"LoginSlider\");","map":{"version":3,"names":["React","useEffect","axios","ReactComponent","Image12","IconKakako","useGlobalState","jsxDEV","_jsxDEV","LoginSlider","slides","_s","dispatch","urlParams","URLSearchParams","window","location","search","code","get","state","withCredentials","then","response","console","log","data","type","payload","id","catch","error","handleKakaoLoginClick","href","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/LoginSlider.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport axios from \"axios\";\nimport \"./styles/LoginSlider.css\";\nimport { ReactComponent as Image12 } from \"./assets/image 12.svg\";\nimport { ReactComponent as IconKakako } from \"./assets/카카오로그인.svg\";\nimport { useGlobalState } from \"./GlobalState\"; // GlobalState에서 custom hook을 가져옵니다.\n\nfunction LoginSlider({ slides = [] }) {\n    const { dispatch } = useGlobalState(); // 전역 상태의 dispatch를 가져옵니다.\n    /*\n    const handleKakaoLoginClick = () => {\n        axios.get('http://localhost:8080/login',{ withCredentials: true }) // 원하는 API 엔드포인트를 입력하세요.\n            .then(response => {\n                console.log('GET 요청 성공:', response.data);\n                dispatch({ type: 'SET_ID', payload: response.data.id }); // 'SET_USER_ID'를 'SET_ID'로 변경\n            })\n            .catch(error => {\n                console.error('GET 요청 실패:', error);\n            });\n    };\n    */\n\n    // const handleKakaoLoginClick = () => {\n    //     window.location.href = 'https://kauth.kakao.com/oauth/authorize?response_type=code&client_id=4fd07ea2b22cd1efe588cb88ceb5763c&redirect_uri=http://localhost:8080/login/oauth2/code/kakao';\n    // };\n\n    useEffect(() => {\n        // 현재 URL에서 쿼리 매개변수를 추출합니다.\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n        const state = urlParams.get('state');\n\n        // 인가 코드가 있는 경우 백엔드로 요청을 보냅니다.\n        if (code) {\n            axios.get(`http://localhost:8080/login/oauth2/code/kakao?code=${code}&state=${state}`, { withCredentials: true })\n                .then(response => {\n                    console.log('GET 요청 성공:', response.data);\n                    // 전역 상태에 사용자 ID를 저장합니다.\n                    dispatch({ type: 'SET_ID', payload: response.data.id });\n                })\n                .catch(error => {\n                    console.error('GET 요청 실패:', error);\n                });\n        }\n    }, [dispatch]);\n\n\n\n\n    const handleKakaoLoginClick = () => {\n        window.location.href = 'http://localhost:8080/login' };\n    return (\n        <div className=\"screen\">\n            <div className=\"kakao-login-button\">\n                <div className=\"kakao-login-content\">\n                    <IconKakako className=\"kakao-login-icon\" alt=\"Kakao Icon\" />\n                    <div className=\"kakao-login-text\" onClick={handleKakaoLoginClick}>\n                        카카오톡 로그인하기\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginSlider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,0BAA0B;AACjC,SAASC,cAAc,IAAIC,OAAO,QAAQ,uBAAuB;AACjE,SAASD,cAAc,IAAIE,UAAU,QAAQ,qBAAqB;AAClE,SAASC,cAAc,QAAQ,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAC;EAAEC,MAAM,GAAG;AAAG,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAS,CAAC,GAAGN,cAAc,CAAC,CAAC,CAAC,CAAC;EACvC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEI;EACA;EACA;;EAEAL,SAAS,CAAC,MAAM;IACZ;IACA,MAAMY,SAAS,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC7D,MAAMC,IAAI,GAAGL,SAAS,CAACM,GAAG,CAAC,MAAM,CAAC;IAClC,MAAMC,KAAK,GAAGP,SAAS,CAACM,GAAG,CAAC,OAAO,CAAC;;IAEpC;IACA,IAAID,IAAI,EAAE;MACNhB,KAAK,CAACiB,GAAG,CAAC,sDAAsDD,IAAI,UAAUE,KAAK,EAAE,EAAE;QAAEC,eAAe,EAAE;MAAK,CAAC,CAAC,CAC5GC,IAAI,CAACC,QAAQ,IAAI;QACdC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAACG,IAAI,CAAC;QACxC;QACAd,QAAQ,CAAC;UAAEe,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAEL,QAAQ,CAACG,IAAI,CAACG;QAAG,CAAC,CAAC;MAC3D,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZP,OAAO,CAACO,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACnB,QAAQ,CAAC,CAAC;EAKd,MAAMoB,qBAAqB,GAAGA,CAAA,KAAM;IAChCjB,MAAM,CAACC,QAAQ,CAACiB,IAAI,GAAG,6BAA6B;EAAC,CAAC;EAC1D,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACnB3B,OAAA;MAAK0B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,eAC/B3B,OAAA;QAAK0B,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChC3B,OAAA,CAACH,UAAU;UAAC6B,SAAS,EAAC,kBAAkB;UAACE,GAAG,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DhC,OAAA;UAAK0B,SAAS,EAAC,kBAAkB;UAACO,OAAO,EAAET,qBAAsB;UAAAG,QAAA,EAAC;QAElE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC7B,EAAA,CAxDQF,WAAW;EAAA,QACKH,cAAc;AAAA;AAAAoC,EAAA,GAD9BjC,WAAW;AA0DpB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}