{"ast":null,"code":"var _jsxFileName = \"/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/WordGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../src/styles/WordGame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordGame = () => {\n  _s();\n  const wordSets = {\n    set1: {\n      words: [\"개미\", \"가미\", \"개미\", \"기미\", \"거마\", \"가미\", \"거미\", \"계미\", \"개미\", \"가미\", \"거미\", \"기미\", \"거마\", \"가미\", \"거미\", \"계미\"],\n      keyWord: \"개미\"\n    },\n    set2: {\n      words: [\"니비\", \"나비\", \"내비\", \"너비\", \"누비\", \"너비\", \"나바\", \"너배\", \"너비\", \"나배\", \"너브\", \"너비\", \"나비\", \"너버\", \"나버\", \"나배\"],\n      keyWord: \"나비\"\n    },\n    set3: {\n      words: [\"도미\", \"도머\", \"도마\", \"도매\", \"도무\", \"도미\", \"도마\", \"도미\", \"도마\", \"도메\", \"도모\", \"도미\", \"도며\", \"도마\", \"도미\", \"도마\"],\n      keyWord: \"도마\"\n    },\n    set4: {\n      words: [\"과자\", \"개자\", \"기자\", \"구자\", \"거자\", \"그자\", \"과자\", \"가자\", \"규자\", \"거자\", \"계자\", \"거자\", \"거자\", \"개자\", \"귀자\", \"가자\"],\n      keyWord: \"과자\"\n    },\n    set5: {\n      words: [\"연도\", \"멸도\", \"명도\", \"전도\", \"건도\", \"변도\", \"면도\", \"영도\", \"역도\", \"면도\", \"연도\", \"정도\", \"면도\", \"병도\", \"던도\", \"면도\"],\n      keyWord: \"면도\"\n    },\n    set6: {\n      words: [\"판다\", \"팡다\", \"팔다\", \"팦다\", \"팍다\", \"판다\", \"팍다\", \"팟다\", \"핀다\", \"필다\", \"팔다\", \"팟다\", \"팟다\", \"판다\", \"팜다\", \"팔다\"],\n      keyWord: \"판다\"\n    }\n  };\n  const [currentSet, setCurrentSet] = useState(wordSets.set1);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const randomizeSet = () => {\n    const sets = Object.values(wordSets);\n    const randomSet = sets[Math.floor(Math.random() * sets.length)];\n    setCurrentSet(randomSet);\n    setInputValue(\"\");\n    setMessage(\"\");\n  };\n  const handleSubmit = () => {\n    const correctCount = currentSet.words.filter(word => word === currentSet.keyWord).length;\n    if (parseInt(inputValue) === correctCount) {\n      setMessage(\"정답입니다! 300P 적립\");\n    } else {\n      setMessage(\"다시 시도해보세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB2E8\\uC5B4 \\uCC3E\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"keyword\",\n        children: currentSet.keyWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), \"\\uAC00 \\uBA87\\uAC1C \\uC228\\uC5B4\\uC788\\uB294\\uC9C0 \\uB9DE\\uCD94\\uC138\\uC694!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-grid\",\n      children: currentSet.words.map((word, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"word-cell\",\n        children: word\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: currentSet.keyWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), \" \\uB294 \\uCD1D\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input-box\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), \" \", \"\\uAC1C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"randomize-button\",\n      onClick: randomizeSet,\n      children: \"\\uC0C8\\uB85C\\uC6B4 \\uBB38\\uC81C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(WordGame, \"U1rm7Wm9Z9eeiWdu1bjiP1bjq0g=\");\n_c = WordGame;\nexport default WordGame;\nvar _c;\n$RefreshReg$(_c, \"WordGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordGame","_s","wordSets","set1","words","keyWord","set2","set3","set4","set5","set6","currentSet","setCurrentSet","inputValue","setInputValue","message","setMessage","randomizeSet","sets","Object","values","randomSet","Math","floor","random","length","handleSubmit","correctCount","filter","word","parseInt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/WordGame.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../src/styles/WordGame.css\";\n\nconst WordGame = () => {\n  const wordSets = {\n    set1: {\n      words: [\n        \"개미\",\n        \"가미\",\n        \"개미\",\n        \"기미\",\n        \"거마\",\n        \"가미\",\n        \"거미\",\n        \"계미\",\n        \"개미\",\n        \"가미\",\n        \"거미\",\n        \"기미\",\n        \"거마\",\n        \"가미\",\n        \"거미\",\n        \"계미\",\n      ],\n      keyWord: \"개미\",\n    },\n    set2: {\n      words: [\n        \"니비\",\n        \"나비\",\n        \"내비\",\n        \"너비\",\n        \"누비\",\n        \"너비\",\n        \"나바\",\n        \"너배\",\n        \"너비\",\n        \"나배\",\n        \"너브\",\n        \"너비\",\n        \"나비\",\n        \"너버\",\n        \"나버\",\n        \"나배\",\n      ],\n      keyWord: \"나비\",\n    },\n    set3: {\n      words: [\n        \"도미\",\n        \"도머\",\n        \"도마\",\n        \"도매\",\n        \"도무\",\n        \"도미\",\n        \"도마\",\n        \"도미\",\n        \"도마\",\n        \"도메\",\n        \"도모\",\n        \"도미\",\n        \"도며\",\n        \"도마\",\n        \"도미\",\n        \"도마\",\n      ],\n      keyWord: \"도마\",\n    },\n    set4: {\n      words: [\n        \"과자\",\n        \"개자\",\n        \"기자\",\n        \"구자\",\n        \"거자\",\n        \"그자\",\n        \"과자\",\n        \"가자\",\n        \"규자\",\n        \"거자\",\n        \"계자\",\n        \"거자\",\n        \"거자\",\n        \"개자\",\n        \"귀자\",\n        \"가자\",\n      ],\n      keyWord: \"과자\",\n    },\n    set5: {\n      words: [\n        \"연도\",\n        \"멸도\",\n        \"명도\",\n        \"전도\",\n        \"건도\",\n        \"변도\",\n        \"면도\",\n        \"영도\",\n        \"역도\",\n        \"면도\",\n        \"연도\",\n        \"정도\",\n        \"면도\",\n        \"병도\",\n        \"던도\",\n        \"면도\",\n      ],\n      keyWord: \"면도\",\n    },\n    set6: {\n      words: [\n        \"판다\",\n        \"팡다\",\n        \"팔다\",\n        \"팦다\",\n        \"팍다\",\n        \"판다\",\n        \"팍다\",\n        \"팟다\",\n        \"핀다\",\n        \"필다\",\n        \"팔다\",\n        \"팟다\",\n        \"팟다\",\n        \"판다\",\n        \"팜다\",\n        \"팔다\",\n      ],\n      keyWord: \"판다\",\n    },\n  };\n\n  const [currentSet, setCurrentSet] = useState(wordSets.set1);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const randomizeSet = () => {\n    const sets = Object.values(wordSets);\n    const randomSet = sets[Math.floor(Math.random() * sets.length)];\n    setCurrentSet(randomSet);\n    setInputValue(\"\");\n    setMessage(\"\");\n  };\n\n  const handleSubmit = () => {\n    const correctCount = currentSet.words.filter(\n      (word) => word === currentSet.keyWord\n    ).length;\n    if (parseInt(inputValue) === correctCount) {\n      setMessage(\"정답입니다! 300P 적립\");\n    } else {\n      setMessage(\"다시 시도해보세요.\");\n    }\n  };\n\n  return (\n    <div className=\"word-game\">\n      <h1>단어 찾기</h1>\n      <p>\n        <span className=\"keyword\">{currentSet.keyWord}</span>가 몇개 숨어있는지\n        맞추세요!\n      </p>\n      <div className=\"word-grid\">\n        {currentSet.words.map((word, index) => (\n          <div key={index} className=\"word-cell\">\n            {word}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-section\">\n        <div className=\"input-row\">\n          <span>{currentSet.keyWord}</span> 는 총{\" \"}\n          <input\n            type=\"text\"\n            className=\"input-box\"\n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n          />{\" \"}\n          개\n        </div>\n      </div>\n      <button className=\"submit-button\" onClick={handleSubmit}>\n        제출하기\n      </button>\n      <button className=\"randomize-button\" onClick={randomizeSet}>\n        새로운 문제\n      </button>\n      {message && <p className=\"message\">{message}</p>}\n    </div>\n  );\n};\n\nexport default WordGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}