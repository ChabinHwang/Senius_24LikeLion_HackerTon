{"ast":null,"code":"var _jsxFileName = \"/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/component/onLoginSuccess.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useGlobalState } from './GlobalState';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginCallback = ({\n  onLoginSuccess\n}) => {\n  _s();\n  const {\n    dispatch\n  } = useGlobalState();\n  const location = useLocation();\n  useEffect(() => {\n    // URL에서 인증 코드를 추출합니다.\n    const code = new URLSearchParams(location.search).get('code');\n    if (code) {\n      axios.get(`/login/oauth2/code/kakao?code=${code}`, {\n        withCredentials: true\n      }).then(response => {\n        console.log('GET 요청 성공:', response.data);\n        dispatch({\n          type: 'SET_ID',\n          payload: response.data.id\n        });\n        if (onLoginSuccess) {\n          onLoginSuccess(response.data.id); // 콜백 함수 호출\n        }\n      }).catch(error => {\n        console.error('GET 요청 실패:', error);\n      });\n    }\n  }, [location.search, dispatch, onLoginSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uADF8\\uC778 \\uCC98\\uB9AC \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginCallback, \"cG2dAFxgnxWx11Nk4C6K65THzTI=\", false, function () {\n  return [useGlobalState, useLocation];\n});\n_c = LoginCallback;\nexport default LoginCallback;\nvar _c;\n$RefreshReg$(_c, \"LoginCallback\");","map":{"version":3,"names":["React","useEffect","axios","useGlobalState","useLocation","jsxDEV","_jsxDEV","LoginCallback","onLoginSuccess","_s","dispatch","location","code","URLSearchParams","search","get","withCredentials","then","response","console","log","data","type","payload","id","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chabin37/Desktop/Project/Senius_24LikeLion_HackerTon/senius/src/component/onLoginSuccess.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useGlobalState } from './GlobalState';\nimport { useLocation } from 'react-router-dom';\n\nconst LoginCallback = ({ onLoginSuccess }) => {\n    const { dispatch } = useGlobalState();\n    const location = useLocation();\n\n    useEffect(() => {\n        // URL에서 인증 코드를 추출합니다.\n        const code = new URLSearchParams(location.search).get('code');\n        if (code) {\n            axios.get(`/login/oauth2/code/kakao?code=${code}`, { withCredentials: true })\n                .then(response => {\n                    console.log('GET 요청 성공:', response.data);\n                    dispatch({ type: 'SET_ID', payload: response.data.id });\n                    if (onLoginSuccess) {\n                        onLoginSuccess(response.data.id); // 콜백 함수 호출\n                    }\n                })\n                .catch(error => {\n                    console.error('GET 요청 실패:', error);\n                });\n        }\n    }, [location.search, dispatch, onLoginSuccess]);\n\n    return (\n        <div>\n            로그인 처리 중...\n        </div>\n    );\n};\n\nexport default LoginCallback;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EACrC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,IAAI,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC,CAACC,GAAG,CAAC,MAAM,CAAC;IAC7D,IAAIH,IAAI,EAAE;MACNV,KAAK,CAACa,GAAG,CAAC,iCAAiCH,IAAI,EAAE,EAAE;QAAEI,eAAe,EAAE;MAAK,CAAC,CAAC,CACxEC,IAAI,CAACC,QAAQ,IAAI;QACdC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAACG,IAAI,CAAC;QACxCX,QAAQ,CAAC;UAAEY,IAAI,EAAE,QAAQ;UAAEC,OAAO,EAAEL,QAAQ,CAACG,IAAI,CAACG;QAAG,CAAC,CAAC;QACvD,IAAIhB,cAAc,EAAE;UAChBA,cAAc,CAACU,QAAQ,CAACG,IAAI,CAACG,EAAE,CAAC,CAAC,CAAC;QACtC;MACJ,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZP,OAAO,CAACO,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;MACtC,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACf,QAAQ,CAACG,MAAM,EAAEJ,QAAQ,EAAEF,cAAc,CAAC,CAAC;EAE/C,oBACIF,OAAA;IAAAqB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAACtB,EAAA,CA3BIF,aAAa;EAAA,QACMJ,cAAc,EAClBC,WAAW;AAAA;AAAA4B,EAAA,GAF1BzB,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}